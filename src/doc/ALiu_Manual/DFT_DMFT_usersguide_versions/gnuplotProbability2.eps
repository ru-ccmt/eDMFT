%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./gnuplotProbability2.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Oct  1 12:07:04 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./gnuplotProbability2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (aliu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct  1 12:07:04 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
938 448 M
63 0 V
5946 0 R
-63 0 V
stroke
854 448 M
[ [(Serif) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
938 1185 M
63 0 V
5946 0 R
-63 0 V
stroke
854 1185 M
[ [(Serif) 240.0 0.0 true true 0 ( 0.0005)]
] -80.0 MRshow
1.000 UL
LTb
938 1922 M
63 0 V
5946 0 R
-63 0 V
stroke
854 1922 M
[ [(Serif) 240.0 0.0 true true 0 ( 0.001)]
] -80.0 MRshow
1.000 UL
LTb
938 2660 M
63 0 V
5946 0 R
-63 0 V
stroke
854 2660 M
[ [(Serif) 240.0 0.0 true true 0 ( 0.0015)]
] -80.0 MRshow
1.000 UL
LTb
938 3397 M
63 0 V
5946 0 R
-63 0 V
stroke
854 3397 M
[ [(Serif) 240.0 0.0 true true 0 ( 0.002)]
] -80.0 MRshow
1.000 UL
LTb
938 4134 M
63 0 V
5946 0 R
-63 0 V
stroke
854 4134 M
[ [(Serif) 240.0 0.0 true true 0 ( 0.0025)]
] -80.0 MRshow
1.000 UL
LTb
938 4871 M
63 0 V
5946 0 R
-63 0 V
stroke
854 4871 M
[ [(Serif) 240.0 0.0 true true 0 ( 0.003)]
] -80.0 MRshow
1.000 UL
LTb
938 448 M
0 63 V
0 4360 R
0 -63 V
stroke
938 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
1940 448 M
0 63 V
0 4360 R
0 -63 V
stroke
1940 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
1.000 UL
LTb
2941 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2941 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 200)]
] -80.0 MCshow
1.000 UL
LTb
3943 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3943 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 300)]
] -80.0 MCshow
1.000 UL
LTb
4944 448 M
0 63 V
0 4360 R
0 -63 V
stroke
4944 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 400)]
] -80.0 MCshow
1.000 UL
LTb
5946 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5946 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 500)]
] -80.0 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6947 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 600)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
938 4871 N
938 448 L
6009 0 V
0 4423 V
-6009 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Serif) 240.0 0.0 true true 0 (P \(i\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3942 98 M
[ [(Serif) 240.0 0.0 true true 0 (i \(index of atomic spin configuration\))]
] -80.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
3376 4043 M
[ [(Serif) 240.0 0.0 true true 0 (imp.0/Probability.dat)]
] -80.0 MRshow
LT0
3460 4043 M
399 0 V
948 448 M
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
11 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 4 V
10 0 V
10 0 V
10 -1 V
10 3 V
10 0 V
10 0 V
10 -2 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 1 V
10 0 V
10 -1 V
10 0 V
10 1 V
10 -1 V
10 -2 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
11 0 V
10 0 V
10 0 V
10 0 V
stroke 1970 449 M
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 1 V
10 0 V
10 -1 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 1 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 1 V
10 0 V
10 0 V
10 -1 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
11 0 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 1 V
10 0 V
10 465 V
10 -3 V
10 1 V
10 -95 V
10 -1 V
10 1 V
10 -5 V
10 -1 V
10 -75 V
10 0 V
10 -250 V
10 -8 V
10 36 V
10 -37 V
10 -1 V
10 -4 V
10 -1 V
10 30 V
10 29 V
10 3 V
10 -3 V
10 4 V
10 -4 V
10 0 V
10 -46 V
10 0 V
10 -7 V
10 0 V
10 37 V
10 -1 V
10 1 V
stroke 3011 514 M
10 -1 V
10 4 V
10 -1 V
10 -5 V
10 0 V
10 -12 V
10 0 V
10 -14 V
10 0 V
10 -7 V
10 0 V
10 34 V
10 -1 V
10 -13 V
10 1 V
10 -15 V
10 -7 V
10 38 V
10 -14 V
10 -38 V
10 0 V
10 0 V
10 -4 V
10 0 V
10 2 V
10 -2 V
11 0 V
10 2 V
10 0 V
10 -1 V
10 1 V
10 29 V
10 -8 V
10 -21 V
10 0 V
10 -1 V
10 0 V
10 19 V
10 -7 V
10 30 V
10 0 V
10 -11 V
10 0 V
10 -2 V
10 1 V
10 2 V
10 -10 V
10 0 V
10 1 V
10 5 V
10 0 V
10 -8 V
10 -1 V
10 26 V
10 0 V
10 -12 V
10 0 V
10 -36 V
10 -1 V
10 1 V
10 -1 V
10 4 V
10 0 V
10 -1 V
10 0 V
10 -1 V
10 2 V
10 -2 V
10 -1 V
10 -2 V
10 0 V
10 0 V
10 0 V
10 31 V
10 1 V
10 -8 V
10 0 V
10 -1 V
10 0 V
10 -6 V
10 0 V
10 -16 V
10 0 V
10 0 V
10 0 V
10 3 V
10 0 V
10 -1 V
10 0 V
10 -2 V
10 0 V
10 2 V
11 0 V
10 -1 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 26 V
10 -7 V
10 36 V
stroke 4053 513 M
10 0 V
10 3 V
10 -17 V
10 1 V
10 2 V
10 -4 V
10 0 V
10 -10 V
10 0 V
10 10 V
10 0 V
10 -10 V
10 0 V
10 -34 V
10 2 V
10 -2 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 2 V
10 0 V
10 -1 V
10 1 V
10 -3 V
10 -1 V
10 1 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
10 2 V
10 0 V
10 -1 V
10 0 V
10 18 V
10 0 V
10 -5 V
10 0 V
10 28 V
10 0 V
10 -10 V
10 0 V
10 8 V
10 0 V
10 -10 V
10 1 V
10 -13 V
10 -4 V
10 -15 V
10 -1 V
11 2 V
10 0 V
10 0 V
10 1 V
10 0 V
10 -1 V
10 0 V
10 -2 V
10 0 V
10 0 V
10 0 V
10 3 V
10 0 V
10 -1 V
10 0 V
10 -3 V
10 0 V
10 -1 V
10 0 V
10 -1 V
1 4421 V
29 0 R
0 -335 V
10 -191 V
10 -1 V
10 -2278 V
10 45 V
10 -345 V
10 -33 V
10 1802 V
10 13 V
10 145 V
10 -1437 V
10 -376 V
10 1169 V
10 -536 V
10 -278 V
10 -2 V
10 -364 V
10 -3 V
5014 701 L
10 -107 V
10 -7 V
10 71 V
10 2184 V
10 5 V
10 -501 V
10 6 V
5094 913 L
10 -1 V
10 -10 V
10 -252 V
10 -2 V
10 -30 V
10 0 V
10 197 V
10 4 V
10 3 V
10 1252 V
10 -3 V
10 -332 V
10 -5 V
10 1714 V
10 -1 V
10 -13 V
10 157 V
10 -159 V
11 163 V
10 -768 V
10 -12 V
10 21 V
10 -17 V
10 131 V
10 -4 V
10 -241 V
10 3 V
10 -471 V
10 3 V
10 -166 V
10 -337 V
10 -68 V
10 -35 V
5435 597 L
10 1 V
10 -25 V
10 1 V
10 843 V
10 -30 V
10 1368 V
10 -477 V
5515 567 L
10 -15 V
10 57 V
10 -19 V
10 -9 V
10 -22 V
10 92 V
10 -1 V
10 -39 V
10 1 V
10 110 V
10 1 V
10 -51 V
10 -1 V
10 19 V
10 2 V
10 -133 V
10 0 V
10 -14 V
10 0 V
10 99 V
10 1 V
10 67 V
10 -2 V
10 -136 V
10 0 V
10 -14 V
10 1 V
10 101 V
10 1 V
10 -72 V
10 0 V
10 -26 V
10 0 V
10 140 V
10 0 V
10 -48 V
10 -1 V
10 -34 V
10 2 V
10 -33 V
10 0 V
10 172 V
11 6 V
10 -5 V
10 6 V
10 0 V
10 1 V
10 -187 V
10 1 V
10 -22 V
10 0 V
10 141 V
10 -1 V
10 2 V
10 3 V
10 -2 V
10 1 V
10 -22 V
10 0 V
10 -44 V
10 1 V
10 -97 V
10 1 V
10 -14 V
10 -1 V
10 23 V
10 0 V
10 66 V
10 0 V
10 -81 V
10 0 V
10 50 V
10 0 V
10 -50 V
10 1 V
10 -9 V
10 1 V
10 22 V
10 -1 V
10 0 V
10 -18 V
10 0 V
10 1 V
10 106 V
10 -37 V
10 -42 V
10 0 V
10 30 V
10 1 V
10 -50 V
10 1 V
10 24 V
10 -1 V
10 81 V
10 -37 V
10 -10 V
10 2 V
10 1 V
10 -28 V
10 2 V
10 0 V
10 -14 V
10 0 V
10 -21 V
stroke 6556 544 M
10 0 V
10 39 V
10 1 V
10 -41 V
10 -1 V
11 17 V
10 0 V
10 -31 V
10 0 V
10 160 V
10 0 V
10 -47 V
10 0 V
10 -67 V
10 0 V
10 -34 V
10 -13 V
10 25 V
10 -1 V
10 56 V
10 -69 V
10 9 V
10 2 V
10 26 V
10 -29 V
10 28 V
10 -25 V
10 -16 V
10 -1 V
10 21 V
10 -21 V
10 0 V
10 21 V
10 25 V
10 -52 V
10 153 V
10 0 V
10 -151 V
10 -6 V
948 448 BoxF
958 448 BoxF
968 448 BoxF
978 448 BoxF
988 448 BoxF
998 448 BoxF
1008 448 BoxF
1018 448 BoxF
1028 448 BoxF
1038 448 BoxF
1048 448 BoxF
1058 448 BoxF
1068 448 BoxF
1078 448 BoxF
1088 448 BoxF
1098 448 BoxF
1108 448 BoxF
1118 448 BoxF
1128 448 BoxF
1138 448 BoxF
1148 448 BoxF
1158 448 BoxF
1168 448 BoxF
1178 448 BoxF
1188 448 BoxF
1198 448 BoxF
1208 448 BoxF
1218 448 BoxF
1228 448 BoxF
1238 448 BoxF
1248 448 BoxF
1258 448 BoxF
1268 448 BoxF
1279 448 BoxF
1289 448 BoxF
1299 448 BoxF
1309 448 BoxF
1319 448 BoxF
1329 448 BoxF
1339 448 BoxF
1349 448 BoxF
1359 448 BoxF
1369 448 BoxF
1379 448 BoxF
1389 448 BoxF
1399 448 BoxF
1409 448 BoxF
1419 448 BoxF
1429 448 BoxF
1439 448 BoxF
1449 448 BoxF
1459 448 BoxF
1469 448 BoxF
1479 448 BoxF
1489 448 BoxF
1499 448 BoxF
1509 452 BoxF
1519 452 BoxF
1529 452 BoxF
1539 451 BoxF
1549 454 BoxF
1559 454 BoxF
1569 454 BoxF
1579 452 BoxF
1589 452 BoxF
1599 452 BoxF
1609 452 BoxF
1619 452 BoxF
1629 452 BoxF
1639 451 BoxF
1649 452 BoxF
1659 452 BoxF
1669 451 BoxF
1679 451 BoxF
1689 452 BoxF
1699 451 BoxF
1709 449 BoxF
1719 449 BoxF
1729 449 BoxF
1739 449 BoxF
1749 449 BoxF
1759 449 BoxF
1769 449 BoxF
1779 449 BoxF
1789 449 BoxF
1799 449 BoxF
1809 449 BoxF
1819 449 BoxF
1829 449 BoxF
1839 449 BoxF
1849 449 BoxF
1859 449 BoxF
1869 449 BoxF
1879 449 BoxF
1889 449 BoxF
1899 449 BoxF
1909 449 BoxF
1919 449 BoxF
1929 449 BoxF
1940 449 BoxF
1950 449 BoxF
1960 449 BoxF
1970 449 BoxF
1980 449 BoxF
1990 449 BoxF
2000 449 BoxF
2010 449 BoxF
2020 448 BoxF
2030 449 BoxF
2040 449 BoxF
2050 448 BoxF
2060 449 BoxF
2070 449 BoxF
2080 449 BoxF
2090 449 BoxF
2100 449 BoxF
2110 449 BoxF
2120 448 BoxF
2130 449 BoxF
2140 449 BoxF
2150 449 BoxF
2160 449 BoxF
2170 448 BoxF
2180 448 BoxF
2190 449 BoxF
2200 449 BoxF
2210 449 BoxF
2220 448 BoxF
2230 449 BoxF
2240 449 BoxF
2250 449 BoxF
2260 449 BoxF
2270 449 BoxF
2280 448 BoxF
2290 449 BoxF
2300 449 BoxF
2310 449 BoxF
2320 449 BoxF
2330 449 BoxF
2340 449 BoxF
2350 449 BoxF
2360 449 BoxF
2370 449 BoxF
2380 449 BoxF
2390 449 BoxF
2400 449 BoxF
2410 448 BoxF
2420 448 BoxF
2430 449 BoxF
2440 449 BoxF
2450 449 BoxF
2460 449 BoxF
2470 449 BoxF
2480 449 BoxF
2490 449 BoxF
2500 449 BoxF
2510 449 BoxF
2520 449 BoxF
2530 449 BoxF
2540 449 BoxF
2550 449 BoxF
2560 449 BoxF
2570 449 BoxF
2580 449 BoxF
2590 448 BoxF
2600 448 BoxF
2611 448 BoxF
2621 448 BoxF
2631 449 BoxF
2641 449 BoxF
2651 449 BoxF
2661 449 BoxF
2671 448 BoxF
2681 448 BoxF
2691 449 BoxF
2701 449 BoxF
2711 914 BoxF
2721 911 BoxF
2731 912 BoxF
2741 817 BoxF
2751 816 BoxF
2761 817 BoxF
2771 812 BoxF
2781 811 BoxF
2791 736 BoxF
2801 736 BoxF
2811 486 BoxF
2821 478 BoxF
2831 514 BoxF
2841 477 BoxF
2851 476 BoxF
2861 472 BoxF
2871 471 BoxF
2881 501 BoxF
2891 530 BoxF
2901 533 BoxF
2911 530 BoxF
2921 534 BoxF
2931 530 BoxF
2941 530 BoxF
2951 484 BoxF
2961 484 BoxF
2971 477 BoxF
2981 477 BoxF
2991 514 BoxF
3001 513 BoxF
3011 514 BoxF
3021 513 BoxF
3031 517 BoxF
3041 516 BoxF
3051 511 BoxF
3061 511 BoxF
3071 499 BoxF
3081 499 BoxF
3091 485 BoxF
3101 485 BoxF
3111 478 BoxF
3121 478 BoxF
3131 512 BoxF
3141 511 BoxF
3151 498 BoxF
3161 499 BoxF
3171 484 BoxF
3181 477 BoxF
3191 515 BoxF
3201 501 BoxF
3211 463 BoxF
3221 463 BoxF
3231 463 BoxF
3241 459 BoxF
3251 459 BoxF
3261 461 BoxF
3271 459 BoxF
3282 459 BoxF
3292 461 BoxF
3302 461 BoxF
3312 460 BoxF
3322 461 BoxF
3332 490 BoxF
3342 482 BoxF
3352 461 BoxF
3362 461 BoxF
3372 460 BoxF
3382 460 BoxF
3392 479 BoxF
3402 472 BoxF
3412 502 BoxF
3422 502 BoxF
3432 491 BoxF
3442 491 BoxF
3452 489 BoxF
3462 490 BoxF
3472 492 BoxF
3482 482 BoxF
3492 482 BoxF
3502 483 BoxF
3512 488 BoxF
3522 488 BoxF
3532 480 BoxF
3542 479 BoxF
3552 505 BoxF
3562 505 BoxF
3572 493 BoxF
3582 493 BoxF
3592 457 BoxF
3602 456 BoxF
3612 457 BoxF
3622 456 BoxF
3632 460 BoxF
3642 460 BoxF
3652 459 BoxF
3662 459 BoxF
3672 458 BoxF
3682 460 BoxF
3692 458 BoxF
3702 457 BoxF
3712 455 BoxF
3722 455 BoxF
3732 455 BoxF
3742 455 BoxF
3752 486 BoxF
3762 487 BoxF
3772 479 BoxF
3782 479 BoxF
3792 478 BoxF
3802 478 BoxF
3812 472 BoxF
3822 472 BoxF
3832 456 BoxF
3842 456 BoxF
3852 456 BoxF
3862 456 BoxF
3872 459 BoxF
3882 459 BoxF
3892 458 BoxF
3902 458 BoxF
3912 456 BoxF
3922 456 BoxF
3932 458 BoxF
3943 458 BoxF
3953 457 BoxF
3963 457 BoxF
3973 458 BoxF
3983 458 BoxF
3993 458 BoxF
4003 458 BoxF
4013 458 BoxF
4023 458 BoxF
4033 484 BoxF
4043 477 BoxF
4053 513 BoxF
4063 513 BoxF
4073 516 BoxF
4083 499 BoxF
4093 500 BoxF
4103 502 BoxF
4113 498 BoxF
4123 498 BoxF
4133 488 BoxF
4143 488 BoxF
4153 498 BoxF
4163 498 BoxF
4173 488 BoxF
4183 488 BoxF
4193 454 BoxF
4203 456 BoxF
4213 454 BoxF
4223 454 BoxF
4233 454 BoxF
4243 454 BoxF
4253 455 BoxF
4263 455 BoxF
4273 455 BoxF
4283 455 BoxF
4293 457 BoxF
4303 457 BoxF
4313 456 BoxF
4323 457 BoxF
4333 454 BoxF
4343 453 BoxF
4353 454 BoxF
4363 454 BoxF
4373 454 BoxF
4383 454 BoxF
4393 455 BoxF
4403 455 BoxF
4413 457 BoxF
4423 457 BoxF
4433 456 BoxF
4443 456 BoxF
4453 474 BoxF
4463 474 BoxF
4473 469 BoxF
4483 469 BoxF
4493 497 BoxF
4503 497 BoxF
4513 487 BoxF
4523 487 BoxF
4533 495 BoxF
4543 495 BoxF
4553 485 BoxF
4563 486 BoxF
4573 473 BoxF
4583 469 BoxF
4593 454 BoxF
4603 453 BoxF
4614 455 BoxF
4624 455 BoxF
4634 455 BoxF
4644 456 BoxF
4654 456 BoxF
4664 455 BoxF
4674 455 BoxF
4684 453 BoxF
4694 453 BoxF
4704 453 BoxF
4714 453 BoxF
4724 456 BoxF
4734 456 BoxF
4744 455 BoxF
4754 455 BoxF
4764 452 BoxF
4774 452 BoxF
4784 451 BoxF
4794 451 BoxF
4804 450 BoxF
4834 4536 BoxF
4844 4345 BoxF
4854 4344 BoxF
4864 2066 BoxF
4874 2111 BoxF
4884 1766 BoxF
4894 1733 BoxF
4904 3535 BoxF
4914 3548 BoxF
4924 3693 BoxF
4934 2256 BoxF
4944 1880 BoxF
4954 3049 BoxF
4964 2513 BoxF
4974 2235 BoxF
4984 2233 BoxF
4994 1869 BoxF
5004 1866 BoxF
5014 701 BoxF
5024 594 BoxF
5034 587 BoxF
5044 658 BoxF
5054 2842 BoxF
5064 2847 BoxF
5074 2346 BoxF
5084 2352 BoxF
5094 913 BoxF
5104 912 BoxF
5114 902 BoxF
5124 650 BoxF
5134 648 BoxF
5144 618 BoxF
5154 618 BoxF
5164 815 BoxF
5174 819 BoxF
5184 822 BoxF
5194 2074 BoxF
5204 2071 BoxF
5214 1739 BoxF
5224 1734 BoxF
5234 3448 BoxF
5244 3447 BoxF
5254 3434 BoxF
5264 3591 BoxF
5274 3432 BoxF
5285 3595 BoxF
5295 2827 BoxF
5305 2815 BoxF
5315 2836 BoxF
5325 2819 BoxF
5335 2950 BoxF
5345 2946 BoxF
5355 2705 BoxF
5365 2708 BoxF
5375 2237 BoxF
5385 2240 BoxF
5395 2074 BoxF
5405 1737 BoxF
5415 1669 BoxF
5425 1634 BoxF
5435 597 BoxF
5445 598 BoxF
5455 573 BoxF
5465 574 BoxF
5475 1417 BoxF
5485 1387 BoxF
5495 2755 BoxF
5505 2278 BoxF
5515 567 BoxF
5525 552 BoxF
5535 609 BoxF
5545 590 BoxF
5555 581 BoxF
5565 559 BoxF
5575 651 BoxF
5585 650 BoxF
5595 611 BoxF
5605 612 BoxF
5615 722 BoxF
5625 723 BoxF
5635 672 BoxF
5645 671 BoxF
5655 690 BoxF
5665 692 BoxF
5675 559 BoxF
5685 559 BoxF
5695 545 BoxF
5705 545 BoxF
5715 644 BoxF
5725 645 BoxF
5735 712 BoxF
5745 710 BoxF
5755 574 BoxF
5765 574 BoxF
5775 560 BoxF
5785 561 BoxF
5795 662 BoxF
5805 663 BoxF
5815 591 BoxF
5825 591 BoxF
5835 565 BoxF
5845 565 BoxF
5855 705 BoxF
5865 705 BoxF
5875 657 BoxF
5885 656 BoxF
5895 622 BoxF
5905 624 BoxF
5915 591 BoxF
5925 591 BoxF
5935 763 BoxF
5946 769 BoxF
5956 764 BoxF
5966 770 BoxF
5976 770 BoxF
5986 771 BoxF
5996 584 BoxF
6006 585 BoxF
6016 563 BoxF
6026 563 BoxF
6036 704 BoxF
6046 703 BoxF
6056 705 BoxF
6066 708 BoxF
6076 706 BoxF
6086 707 BoxF
6096 685 BoxF
6106 685 BoxF
6116 641 BoxF
6126 642 BoxF
6136 545 BoxF
6146 546 BoxF
6156 532 BoxF
6166 531 BoxF
6176 554 BoxF
6186 554 BoxF
6196 620 BoxF
6206 620 BoxF
6216 539 BoxF
6226 539 BoxF
6236 589 BoxF
6246 589 BoxF
6256 539 BoxF
6266 540 BoxF
6276 531 BoxF
6286 532 BoxF
6296 554 BoxF
6306 553 BoxF
6316 553 BoxF
6326 535 BoxF
6336 535 BoxF
6346 536 BoxF
6356 642 BoxF
6366 605 BoxF
6376 563 BoxF
6386 563 BoxF
6396 593 BoxF
6406 594 BoxF
6416 544 BoxF
6426 545 BoxF
6436 569 BoxF
6446 568 BoxF
6456 649 BoxF
6466 612 BoxF
6476 602 BoxF
6486 604 BoxF
6496 605 BoxF
6506 577 BoxF
6516 579 BoxF
6526 579 BoxF
6536 565 BoxF
6546 565 BoxF
6556 544 BoxF
6566 544 BoxF
6576 583 BoxF
6586 584 BoxF
6596 543 BoxF
6606 542 BoxF
6617 559 BoxF
6627 559 BoxF
6637 528 BoxF
6647 528 BoxF
6657 688 BoxF
6667 688 BoxF
6677 641 BoxF
6687 641 BoxF
6697 574 BoxF
6707 574 BoxF
6717 540 BoxF
6727 527 BoxF
6737 552 BoxF
6747 551 BoxF
6757 607 BoxF
6767 538 BoxF
6777 547 BoxF
6787 549 BoxF
6797 575 BoxF
6807 546 BoxF
6817 574 BoxF
6827 549 BoxF
6837 533 BoxF
6847 532 BoxF
6857 553 BoxF
6867 532 BoxF
6877 532 BoxF
6887 553 BoxF
6897 578 BoxF
6907 526 BoxF
6917 679 BoxF
6927 679 BoxF
6937 528 BoxF
6947 522 BoxF
3659 4043 BoxF
% End plot #1
1.000 UL
LTb
938 4871 N
938 448 L
6009 0 V
0 4423 V
-6009 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Serif Helvetica
