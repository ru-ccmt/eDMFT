%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./gnuplotProbability.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Oct  1 12:00:53 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./gnuplotProbability.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (aliu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct  1 12:00:53 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1022 448 M
63 0 V
5862 0 R
-63 0 V
stroke
938 448 M
[ [(Serif) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1022 1001 M
63 0 V
5862 0 R
-63 0 V
stroke
938 1001 M
[ [(Serif) 240.0 0.0 true true 0 ( 5e-07)]
] -80.0 MRshow
1.000 UL
LTb
1022 1554 M
63 0 V
5862 0 R
-63 0 V
stroke
938 1554 M
[ [(Serif) 240.0 0.0 true true 0 ( 1e-06)]
] -80.0 MRshow
1.000 UL
LTb
1022 2107 M
63 0 V
5862 0 R
-63 0 V
stroke
938 2107 M
[ [(Serif) 240.0 0.0 true true 0 ( 1.5e-06)]
] -80.0 MRshow
1.000 UL
LTb
1022 2660 M
63 0 V
5862 0 R
-63 0 V
stroke
938 2660 M
[ [(Serif) 240.0 0.0 true true 0 ( 2e-06)]
] -80.0 MRshow
1.000 UL
LTb
1022 3212 M
63 0 V
5862 0 R
-63 0 V
stroke
938 3212 M
[ [(Serif) 240.0 0.0 true true 0 ( 2.5e-06)]
] -80.0 MRshow
1.000 UL
LTb
1022 3765 M
63 0 V
5862 0 R
-63 0 V
stroke
938 3765 M
[ [(Serif) 240.0 0.0 true true 0 ( 3e-06)]
] -80.0 MRshow
1.000 UL
LTb
1022 4318 M
63 0 V
5862 0 R
-63 0 V
stroke
938 4318 M
[ [(Serif) 240.0 0.0 true true 0 ( 3.5e-06)]
] -80.0 MRshow
1.000 UL
LTb
1022 4871 M
63 0 V
5862 0 R
-63 0 V
stroke
938 4871 M
[ [(Serif) 240.0 0.0 true true 0 ( 4e-06)]
] -80.0 MRshow
1.000 UL
LTb
1022 448 M
0 63 V
0 4360 R
0 -63 V
stroke
1022 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
1763 448 M
0 63 V
0 4360 R
0 -63 V
stroke
1763 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
2503 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2503 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 40)]
] -80.0 MCshow
1.000 UL
LTb
3244 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3244 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 60)]
] -80.0 MCshow
1.000 UL
LTb
3985 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3985 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 80)]
] -80.0 MCshow
1.000 UL
LTb
4725 448 M
0 63 V
0 4360 R
0 -63 V
stroke
4725 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
1.000 UL
LTb
5466 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5466 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 120)]
] -80.0 MCshow
1.000 UL
LTb
6206 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6206 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 140)]
] -80.0 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6947 308 M
[ [(Serif) 240.0 0.0 true true 0 ( 160)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1022 4871 N
0 -4423 V
5925 0 V
0 4423 V
-5925 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Serif) 240.0 0.0 true true 0 (P \(i\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3984 98 M
[ [(Serif) 240.0 0.0 true true 0 (i \(index of atomic spin configuration\))]
] -80.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6195 4227 M
[ [(Serif) 240.0 0.0 true true 0 (imp.0/Probability.dat)]
] -80.0 MRshow
LT0
6279 4227 M
399 0 V
1059 448 M
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 39 V
37 -5 V
37 -5 V
37 -6 V
38 5 V
37 3 V
37 -7 V
37 -2 V
37 2 V
37 1 V
37 0 V
37 -5 V
37 0 V
37 0 V
37 -12 V
37 -1 V
37 2 V
37 -1 V
37 23 V
37 -3 V
37 -3 V
37 -2 V
37 -14 V
37 0 V
37 0 V
37 0 V
37 2 V
37 -1 V
37 0 V
37 2 V
37 -2 V
37 0 V
37 20 V
37 -9 V
37 -12 V
37 1 V
38 -2 V
37 1 V
37 -1 V
37 1 V
37 -2 V
37 -1 V
37 2 V
37 0 V
37 0 V
37 3350 V
37 -687 V
37 -4 V
37 -552 V
37 2071 V
37 -12 V
37 11 V
37 -847 V
37 8 V
37 12 V
37 -36 V
37 4 V
37 -652 V
37 -58 V
37 577 V
37 54 V
37 -671 V
37 -25 V
37 649 V
37 -692 V
37 -1770 V
37 17 V
37 -346 V
38 -27 V
37 236 V
37 16 V
37 -7 V
37 -11 V
37 0 V
37 -87 V
37 7 V
37 11 V
37 374 V
37 -21 V
37 48 V
37 -492 V
37 -48 V
37 345 V
37 -27 V
37 60 V
37 -60 V
37 0 V
37 -124 V
37 10 V
37 -147 V
37 5 V
37 -72 V
stroke 4836 846 M
37 -5 V
37 20 V
37 25 V
37 -62 V
37 -1 V
37 68 V
37 1 V
37 -76 V
38 31 V
37 341 V
37 25 V
37 -167 V
37 -1 V
37 -146 V
37 -77 V
37 341 V
37 6 V
37 -318 V
37 -5 V
37 -46 V
37 -4 V
37 261 V
37 -25 V
37 -185 V
37 -62 V
37 134 V
37 3 V
37 -78 V
37 -9 V
37 17 V
37 -57 V
37 318 V
37 -126 V
37 144 V
37 -6 V
37 -135 V
37 5 V
37 133 V
37 -1 V
37 -128 V
38 4 V
37 -167 V
37 -10 V
37 -53 V
37 -18 V
37 296 V
37 1 V
37 -115 V
37 2 V
37 -1 V
37 10 V
37 -13 V
37 53 V
37 -40 V
37 19 V
37 -94 V
37 -9 V
1059 448 BoxF
1096 448 BoxF
1133 448 BoxF
1170 448 BoxF
1207 448 BoxF
1244 448 BoxF
1281 448 BoxF
1318 448 BoxF
1355 448 BoxF
1392 448 BoxF
1429 448 BoxF
1466 487 BoxF
1503 482 BoxF
1540 477 BoxF
1577 471 BoxF
1615 476 BoxF
1652 479 BoxF
1689 472 BoxF
1726 470 BoxF
1763 472 BoxF
1800 473 BoxF
1837 473 BoxF
1874 468 BoxF
1911 468 BoxF
1948 468 BoxF
1985 456 BoxF
2022 455 BoxF
2059 457 BoxF
2096 456 BoxF
2133 479 BoxF
2170 476 BoxF
2207 473 BoxF
2244 471 BoxF
2281 457 BoxF
2318 457 BoxF
2355 457 BoxF
2392 457 BoxF
2429 459 BoxF
2466 458 BoxF
2503 458 BoxF
2540 460 BoxF
2577 458 BoxF
2614 458 BoxF
2651 478 BoxF
2688 469 BoxF
2725 457 BoxF
2762 458 BoxF
2800 456 BoxF
2837 457 BoxF
2874 456 BoxF
2911 457 BoxF
2948 455 BoxF
2985 454 BoxF
3022 456 BoxF
3059 456 BoxF
3096 456 BoxF
3133 3806 BoxF
3170 3119 BoxF
3207 3115 BoxF
3244 2563 BoxF
3281 4634 BoxF
3318 4622 BoxF
3355 4633 BoxF
3392 3786 BoxF
3429 3794 BoxF
3466 3806 BoxF
3503 3770 BoxF
3540 3774 BoxF
3577 3122 BoxF
3614 3064 BoxF
3651 3641 BoxF
3688 3695 BoxF
3725 3024 BoxF
3762 2999 BoxF
3799 3648 BoxF
3836 2956 BoxF
3873 1186 BoxF
3910 1203 BoxF
3947 857 BoxF
3985 830 BoxF
4022 1066 BoxF
4059 1082 BoxF
4096 1075 BoxF
4133 1064 BoxF
4170 1064 BoxF
4207 977 BoxF
4244 984 BoxF
4281 995 BoxF
4318 1369 BoxF
4355 1348 BoxF
4392 1396 BoxF
4429 904 BoxF
4466 856 BoxF
4503 1201 BoxF
4540 1174 BoxF
4577 1234 BoxF
4614 1174 BoxF
4651 1174 BoxF
4688 1050 BoxF
4725 1060 BoxF
4762 913 BoxF
4799 918 BoxF
4836 846 BoxF
4873 841 BoxF
4910 861 BoxF
4947 886 BoxF
4984 824 BoxF
5021 823 BoxF
5058 891 BoxF
5095 892 BoxF
5132 816 BoxF
5170 847 BoxF
5207 1188 BoxF
5244 1213 BoxF
5281 1046 BoxF
5318 1045 BoxF
5355 899 BoxF
5392 822 BoxF
5429 1163 BoxF
5466 1169 BoxF
5503 851 BoxF
5540 846 BoxF
5577 800 BoxF
5614 796 BoxF
5651 1057 BoxF
5688 1032 BoxF
5725 847 BoxF
5762 785 BoxF
5799 919 BoxF
5836 922 BoxF
5873 844 BoxF
5910 835 BoxF
5947 852 BoxF
5984 795 BoxF
6021 1113 BoxF
6058 987 BoxF
6095 1131 BoxF
6132 1125 BoxF
6169 990 BoxF
6206 995 BoxF
6243 1128 BoxF
6280 1127 BoxF
6317 999 BoxF
6355 1003 BoxF
6392 836 BoxF
6429 826 BoxF
6466 773 BoxF
6503 755 BoxF
6540 1051 BoxF
6577 1052 BoxF
6614 937 BoxF
6651 939 BoxF
6688 938 BoxF
6725 948 BoxF
6762 935 BoxF
6799 988 BoxF
6836 948 BoxF
6873 967 BoxF
6910 873 BoxF
6947 864 BoxF
6478 4227 BoxF
% End plot #1
1.000 UL
LTb
1022 4871 N
0 -4423 V
5925 0 V
0 4423 V
-5925 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Serif Helvetica
